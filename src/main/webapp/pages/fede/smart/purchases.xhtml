<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2021 jlgranda

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-->
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:o="http://omnifaces.org/ui"
                template="/WEB-INF/template.xhtml"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">
    <ui:define name="title">#{i18n['app.name']} - #{i18n['app.fede.smart']}</ui:define>
    <ui:define name="head"></ui:define>
    <ui:define name="params">
        <f:metadata>
            <!--<f:viewParam name="" value="" />-->
        </f:metadata>
    </ui:define>
    <ui:define name="viewname">
        <li>#{i18n['app.fede.smart']}</li>
        <li>/</li>
        <li><p:link outcome="purchases">#{i18n['app.fede.inventory.purchases']}</p:link></li>
    </ui:define>
    <ui:define name="content" rendered="#{true}">
        <div class="layout-dashboard">
            <div class="ui-g">
                <div class="ui-g-12 ui-md-12 ui-lg-12 ui-sm-12">
                    <p:toolbar>
                        <p:toolbarGroup>
                            <p:outputLabel class="Gray MarRight10" value="#{i18n['common.from']}:" for="@next"/>
                            <p:calendar value="#{summaryHome.start}" class="input-sm MarRight10">
                                <p:ajax event="dateSelect" listener="#{summaryHome.clearBarModel()}" 
                                        update="barModelPurchases"/> <!-- oncomplete="form.submit();" --> 
                            </p:calendar>
                            <p:outputLabel class="Gray MarRight10" value="#{i18n['common.to']}:" for="@next"/>
                            <p:calendar value="#{summaryHome.end}" class="input-sm MarRight10">
                                <p:ajax event="dateSelect" listener="#{summaryHome.clearBarModel()}"
                                        update="barModelPurchases"/> 
                            </p:calendar>      
                        </p:toolbarGroup>
                        <p:toolbarGroup>

                        </p:toolbarGroup>
                    </p:toolbar>
                </div>
                <div class="ui-g-12 ui-md-12 ui-lg-12 ui-sm-12">
                    <!--Listado de Proveedores: Compras-->
                    <p:panel id="control-bar2"
                             header="#{i18n['app.fede.smart.purchases.top.supplier']}" 
                             styleClass="statistics ui-g">                        
                        <div class="ui-g-12 ui-md-12 ui-lg-12 ui-xl-12 right-side">
                            <p:chart id="barModelPurchases" 
                                     type="bar"
                                     model="#{summaryHome.horizontalPurchasesBarModel}" 
                                     rendered="#{not empty summaryHome.horizontalPurchasesBarModel}"
                                     responsive="true"/>
                        </div>
                        <div class="ui-fluid">
                            <p:commandButton id="button-detail" 
                                             value="#{i18n['common.detail']} #{i18n['common.current']}" icon="pi pi-list" styleClass="warning-btn"
                                             disabled="#{summaryHome.modelEmpty}"
                                             update=":form:panel-dataTable" 
                                             oncomplete="PF('dlgTblPurchases').show()">
                            </p:commandButton>
                        </div>
                    </p:panel>
                </div>
            </div>
        </div>
        <p:dialog widgetVar="dlgTblPurchases" class="Container100 Responsive50" closeOnEscape="true"
                  fitViewport="true" hideEffect="blind" showEffect="clip" modal="true" resizable="false"
                 height="500" width="800" class="Fright">
            <p:outputPanel id="panel-dataTable"> 
                <p:dataTable id="dataTable-purchases" lazy="false" liveResize="true"
                             liveScroll="true" paginator="true" paginatorAlwaysVisible="false"
                             paginatorPosition="bottom" resizableColumns="true" rowKey="#{recordDetail.id}"
                             rows="10" scrollable="true" scrollHeight="100%" scrollRows="10"
                             scrollWidth="100%" tableStyle="table-layout: auto"
                             value="#{summaryHome.listPurchases}" var="purchases">
                    <f:facet name="header">
                        <h:outputText value="#{i18n['app.fede.smart.purchases.summary']}"></h:outputText>
                    </f:facet>
                    <p:column id="nme" headerText="#{i18n['common.supplier']}" sortBy="#{purchases[0]}" class="Wid60">
                        <h:outputText value="#{purchases[0]}"/>
                    </p:column>
                    <p:column id="amount" headerText="#{i18n['common.value']} #{i18n['common.money.letter']}" sortBy="#{purchases[1]}">
                        <h:outputText value="#{purchases[1]}">
                            <f:convertNumber type="currency" currencySymbol="$"/>
                        </h:outputText>
                    </p:column>
                    <p:columnGroup type="footer" >
                        <span class="ui-g-12" style="border: 1px solid #E9E9E9;">
                            <span class="ui-g-10 Fright" style=" font-weight: bolder;">#{i18n['app.fede.inventory.purchases.totals']}: </span>
                            <span class="ui-g-2" style="font-weight: bold; color: #005b9f;">
                                <h:outputText value="#{summaryHome.getListPurchasesTotal()}" class="Fright">
                                    <f:convertNumber type="currency" currencySymbol="$"/>
                                </h:outputText>
                            </span>
                        </span>
                    </p:columnGroup>
                </p:dataTable>
            </p:outputPanel>
        </p:dialog>
    </ui:define>
    <ui:define name="style">
        <style type="text/css">

            .jqplot-target, .jqplot-axis {
                color: #546E7A;
            }

            .jqplot-xaxis-label, .jqplot-yaxis-label, .jqplot-y2axis-label, .jqplot-x2axis-label {
                color: #757575; 
            }

            table.jqplot-table-legend {
                background-color: #ffffff;
                color: #434560;
                border-color: #d8dae2;
            }
        </style>
    </ui:define>
    <ui:define name="script">
        <script type="text/javascript">
            //<![CDATA[
            function refresh() {
                location.reload(); // refresh page    

            }

            function skinChart() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = [#{settingHome.getValue("app.fede.sales.chart.seriesColor", "'#058DC7', '#50B432', '#FFD200', '#FF0000', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#8d83a7', '#6AF9C4', '#936af9'")}];
                this.cfg.negativeSeriesColors = [#{settingHome.getValue("app.fede.sales.chart.negativeSeriesColors", "'#058DC7', '#50B432', '#FFD200', '#FF0000', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#8d83a7', '#6AF9C4', '#936af9'")}];
                this.cfg.grid = {
                    background: '#{settingHome.getValue("app.fede.sales.chart.background", "#ffffff")}',
                    borderColor: '#{settingHome.getValue("app.fede.sales.chart.background", "#ffffff")}',
                    gridLineColor: '#{settingHome.getValue("app.fede.sales.chart.background", "#F5F5F5")}',
                    shadow: false,
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#{settingHome.getValue("app.fede.sales.chart.axesDefaults.textColor:", "#546E7A")}'
                    }
                };
                this.cfg.seriesDefaults = {
                    fillToZero: #{settingHome.getValue("app.fede.sales.chart.seriesDefaults.fillToZero", "true")},
                    shadow: #{settingHome.getValue("app.fede.sales.chart.seriesDefaults.shadow", "false")},
                    markerOptions: {
                        shadow: #{settingHome.getValue("app.fede.sales.chart.seriesDefaults.markerOptions.shadow", "false")}
                    }
                }
            }

            function skinBar() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = [#{settingHome.getValue("app.fede.sales.chart.seriesColor", "'#058DC7', '#50B432', '#FFD200', '#FF0000', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#8d83a7', '#6AF9C4', '#936af9'")}];
                this.cfg.negativeSeriesColors = [#{settingHome.getValue("app.fede.sales.chart.negativeSeriesColors", "'#058DC7', '#50B432', '#FFD200', '#FF0000', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#8d83a7', '#6AF9C4', '#936af9'")}];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#d8dae2',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    borderWidth: 0.1,
                    borderColor: 'd8dae2',
                    rendererOptions: {
                        textColor: '#434560'
                    },
                    tickRenderer: $.jqplot.CanvasAxisTickRenderer,
                    tickOptions: {
                        angle: 30,
                        fontSize: '9px',
                        formatString: "%'.2f"
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    renderer: $.jqplot.BarRenderer,
                    pointLabels: {show: true, formatString: '%.2f'},
                    markerOptions: {
                        shadow: false,
                        size: 5,
                        style: 'circle'
                    }
                }
            }

            function skinBar2() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = [#{settingHome.getValue("app.fede.sales.chart.seriesColor2", "'#2D8EE3', '#50B432','#058DC7', '#FFD200', '#FF0000', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#8d83a7', '#6AF9C4', '#936af9'")}];
                this.cfg.negativeSeriesColors = [#{settingHome.getValue("app.fede.sales.chart.negativeSeriesColors", "'#058DC7', '#50B432', '#FFD200', '#FF0000', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#8d83a7', '#6AF9C4', '#936af9'")}];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#d8dae2',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    borderWidth: 0.1,
                    borderColor: 'd8dae2',
                    rendererOptions: {
                        textColor: '#434560'
                    },
                    tickRenderer: $.jqplot.CanvasAxisTickRenderer,
                    tickOptions: {
                        angle: 30,
                        fontSize: '9px',
                        formatString: "%'.2f"
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    renderer: $.jqplot.BarRenderer,
                    pointLabels: {show: true, formatString: '$%.2f'},
                    markerOptions: {
                        shadow: false,
                        size: 5,
                        style: 'circle'
                    }
                }
            }
            function skinHorizontalBar() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = [#{settingHome.getValue("app.fede.sales.chart.seriesColor", "'#058DC7', '#50B432', '#FFD200', '#FF0000', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#8d83a7', '#6AF9C4', '#936af9'")}];
                this.cfg.negativeSeriesColors = [#{settingHome.getValue("app.fede.sales.chart.negativeSeriesColors", "'#058DC7', '#50B432', '#FFD200', '#FF0000', '#ED561B', '#DDDF00', '#24CBE5', '#64E572', '#FF9655', '#8d83a7', '#6AF9C4', '#936af9'")}];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#d8dae2',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    borderWidth: 0.1,
                    borderColor: 'd8dae2',
                    rendererOptions: {
                        textColor: '#434560'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    renderer: $.jqplot.BarRenderer,
                    pointLabels: {show: true, formatString: '%.2f'},
                    rendererOptions: {
                        barDirection: 'horizontal'
                    },
                    markerOptions: {
                        shadow: false,
                        size: 5,
                        style: 'circle'
                    }
                }
            }

            function skinArea() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#e02365', '#2D8EE3'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#dce2e7',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    borderWidth: 0.1,
                    borderColor: 'd8dae2',
                    rendererOptions: {
                        textColor: '#434560'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinBubble() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#e02365', '#2D8EE3'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#d8dae2',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#434560'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    renderer: $.jqplot.BubbleRenderer,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinZoom() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#e02365', '#2D8EE3'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#d8dae2',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#434560'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinPie() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#e02365', '#2D8EE3', '#44be2c', '#eeb210'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#dce2e7',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#434560',
                    }
                };
                this.cfg.seriesDefaults = {
                    renderer: $.jqplot.PieRenderer,
                    shadow: false,
                    lineWidth: 1,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinDonut() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#e02365', '#2D8EE3', '#44be2c', '#eeb210'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#d8dae2',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    rendererOptions: {
                        textColor: '#434560',
                    }
                };
                this.cfg.seriesDefaults = {
                    renderer: $.jqplot.DonutRenderer,
                    shadow: false,
                    lineWidth: 1,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinBarAndLine() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#2D8EE3', '#e02365'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#d8dae2',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    borderWidth: 0.1,
                    borderColor: 'd8dae2',
                    rendererOptions: {
                        textColor: '#434560'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 5,
                    renderer: $.jqplot.BarRenderer,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }

            function skinMeterGauge() {
                this.cfg.title = '';
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 5,
                    renderer: $.jqplot.MeterGaugeRenderer,
                    rendererOptions: {
                        shadow: false,
                        min: 100,
                        max: 800,
                        intervals: [200, 300, 400, 500, 600, 700, 800],
                        intervalColors: ['#e02365', '#2D8EE3', '#44be2c', '#eeb210', '#AB44BC', '#2162b0', '#FFD000']
                    }
                }
            }

            function skinMultiAxis() {
                this.cfg.shadow = false;
                this.cfg.title = '';
                this.cfg.seriesColors = ['#e02365', '#2D8EE3'];
                this.cfg.grid = {
                    background: '#ffffff',
                    borderColor: '#ffffff',
                    gridLineColor: '#d8dae2',
                    shadow: false
                };
                this.cfg.axesDefaults = {
                    borderWidth: 0.1,
                    borderColor: 'bdc3c9',
                    rendererOptions: {
                        textColor: '#434560'
                    }
                };
                this.cfg.seriesDefaults = {
                    shadow: false,
                    lineWidth: 1,
                    renderer: $.jqplot.BarRenderer,
                    markerOptions: {
                        shadow: false,
                        size: 7,
                        style: 'circle'
                    }
                }
            }
            //]]>
        </script>
    </ui:define>
</ui:composition>